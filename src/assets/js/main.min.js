
    angular.module('market', [    
        'ngRoute',                                
        'ui.router',
        'ngDialog'        
    ]);

angular.module('market')
    .controller('marketController', marketController);

    marketController.$inject = ['DataFactory'];

    function marketController(DataFactory) {
        let vm = this;
        vm.data = DataFactory;
        
        vm.data.checkButton = 'inicio';
    }


    angular
        .module('market')
        .config(ConfigProvider)
        .run(function () {    
        });

    ConfigProvider.$inject = ['$urlRouterProvider', '$stateProvider'];

    function ConfigProvider($urlRouterProvider, $stateProvider) {
        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('/', {
                url: '/',
                views: {
                    'header': {
                        template: '<mkt-header></mkt-header>'
                    },
                    'body': {
                        template: '<home></home>'
                    },                    
                    'footer': {
                        template: '<mkt-footer></mkt-footer>'
                    }
                }
            })

            .state('carrinho', {
                url: '/carrinho',
                views: {
                'header': {
                        template: '<mkt-header></mkt-header>'
                    },
                    'body': {
                        template: '<carrinho></carrinho>'
                    },                    
                    'footer': {
                        template: '<mkt-footer></mkt-footer>'
                    }  
                }              
            });            
    }
    angular.module('market')        
        .controller('carrinhoController', carrinhoController)
        .component('carrinho', {
            templateUrl: '../components/carrinho/carrinho.html',
            controller: 'carrinhoController',
            controllerAs: 'vm'
        });

        carrinhoController.$inject = [];

        function carrinhoController() {
            let vm = this;        
        }
    angular.module('market')        
        .controller('homeController', homeController)
        .component('home', {
            templateUrl: '../components/home/home.html',
            controller: 'homeController',
            controllerAs: 'vm'
        });

        homeController.$inject = ['HTTPSERVICE', 'CONST', '$q','$timeout'];

        function homeController(HTTPSERVICE, CONST, $q, $timeout) {
            let vm = this;
            vm.livros = {};
            vm.carregando = true;

            let init = () => {
                getLivros().then(livros => {
                    $timeout(timeout => {
                        vm.livros = livros;
                        vm.carregando = false;
                    }, 1000);
                    
                });
            }

            init();

            function getLivros() {
                let defer = $q.defer();
                
                HTTPSERVICE.get(CONST.getLivros).then( livros => {
                    defer.resolve(livros);
                }).catch(err => { 
                    defer.reject(err) 
                });

                return defer.promise;
            }
        }

angular.module('market')
    .controller('footerController', footerController)
    .component('mktFooter', {
            templateUrl: '../components/partials/footer/footer.html',
            controller: 'footerController',
            controllerAs: 'vm'
        });

    footerController.$inject = [];

    function footerController() {

    }
angular.module('market')
    .controller('headerController', headerController)
    .component('mktHeader', {
            templateUrl: '../components/partials/header/header.html',
            controller: 'headerController',
            controllerAs: 'vm'
        });

    headerController.$inject = ['$state', 'DataFactory'];

    function headerController($state, DataFactory) {
        let vm = this;
        vm.data = DataFactory;
        //functions
        vm.goCarrinho = _goCarrinho;
        vm.goInicio = _goInicio;
        vm.goSobre = _goSobre;
        vm.lupa = _lupa;

        //var        
        console.log(vm.checkButton);
        function _goCarrinho() {
            vm.data.checkButton = 'carrinho';
            $state.go('carrinho');            
        }

        function _goInicio() {
            vm.data.checkButton = 'inicio';
            $state.go('/');            
        }

        function _goSobre() {
            vm.data.checkButton = 'sobre';
        }

        function _lupa() {
            vm.data.checkButton = 'search';
        }

    }

    const staticRoot = 'http://127.0.0.1:3131/api/';
    angular.module('market')
        .constant('CONST', {
            
            getLivros: staticRoot,
            getById: staticRoot.concat('findById'),
            adicionarLivro: staticRoot.concat('adicionar'),
            deleteLivro: staticRoot.concat('remover')

        })

    angular
        .module('market')
        .factory('DataFactory', DataFactory);

    DataFactory.$inject = [];

    function DataFactory() {

        var data = {};

        return data;

    }

angular.module('market')
    .service('HTTPSERVICE', HTTPSERVICE);

    HTTPSERVICE.$inject = ['$http', '$q'];

    function HTTPSERVICE($http, $q) {        
        var vm = this;
        vm.get = _get;
        vm.post = _post;
        vm.delete = _delete;

        function _get(url) {
            var defer = $q.defer();

            $http.get(url).then(function(data) {
                defer.resolve(data.data);
            }, function(err) {
                defer.reject(err);
            })

            return defer.promise;
        }

        function _post(url, params) {
            var defer = $q.defer();
            $http.post(url, params).then(function(data) {
                defer.resolve(data.data);
            }, function(err) {
                defer.reject(err);
            });
            return defer.promise;
        }

        function _delete(url) {
            var defer = $q.defer();
            $http.delete(url).then(function(data) {
                defer.resolve(data);
            }, function(err) {
                defer.reject(err);
            });
            return defer.promise;
        }
    }